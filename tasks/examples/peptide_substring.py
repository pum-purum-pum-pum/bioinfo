matcher = {"GCA": "A",
"GCC": "A",
"GCG": "A",
"GCT": "A",
"TGC": "C",
"TGT": "C",
"GAC": "D",
"GAT": "D",
"GAA": "E",
"GAG": "E",
"TTC": "F",
"TTT": "F",
"GGA": "G",
"GGC": "G",
"GGG": "G",
"GGT": "G",
"CAC": "H",
"CAT": "H",
"ATA": "I",
"ATC": "I",
"ATT": "I",
"AAA": "K",
"AAG": "K",
"CTA": "L",
"CTC": "L",
"CTG": "L",
"CTT": "L",
"TTA": "L",
"TTG": "L",
"ATG": "M",
"AAC": "N",
"AAT": "N",
"CCA": "P",
"CCC": "P",
"CCG": "P",
"CCT": "P",
"CAA": "Q",
"CAG": "Q",
"AGA": "R",
"AGG": "R",
"CGA": "R",
"CGC": "R",
"CGG": "R",
"CGT": "R",
"AGC": "S",
"AGT": "S",
"TCA": "S",
"TCC": "S",
"TCG": "S",
"TCT": "S",
"ACA": "T",
"ACC": "T",
"ACG": "T",
"ACT": "T",
"GTA": "V",
"GTC": "V",
"GTG": "V",
"GTT": "V",
"TGG": "W",
"TAC": "Y",
"TAT": "Y",
"TGA": "",
"TAA": "",
"TAG": "",
}

def rev_comp(dna):
    out = ""
    comp_map = {
        'A': 'T', 
        'T': 'A', 
        'C': 'G',
        'G': 'C'
    }
    return "".join(list(map(lambda x: comp_map[x], dna[::-1])))


dna = "ACCGGCTGCCTATTCCCTCTCGTGTGCTCCAGCTCGACTAAAGCTTCGGGGAAATTGACTCTAAGCTAATACCCCGGCAATGCAAATGAGATCCAGGAGTGACAACGTTTTCTCGCGCGCCCATAGTCCGGCGGCAAGATTCGCCGATATGCGCATTCGCCCGTTCGCGTTGGGAGGATGCGCATGCTCCTCTATATTGCTGAGCAGTCGTTATGGGAAGATGGCCTGTGCTTTTTGGCCGGGCGATAAGTAAGTTTTCGAACACCCCCTTTGTTTAAAGCCTGTAGTAAAGAATTTAAAGGGAGCCTCTCAGGAAGTGTGGAGGAAAGAGGTAATTTGACTCAGAAGCTACCGAAGTGAATTCCACCACAACCTTCGGTGTAATACTAATCCGGAGAAACTCCGGTTTGAATTTACACCATTCAAGTTTTTCACGACCGGATTTAAATCCCGGATCCGGGGAAGGAGAGAAGCAGAGCCAATTGCACGAAGCGCCGTTCAAATACGCGTTATTTCTCAGGCTATACTATATGCGGAAACCCCCAGAAGAAGGATCGTTTGACAACCCCTGACCGAACGGCAAAAATCCTTTTAGGTTAGAGAGAAATGGCATTGCAAGTAGTGGCTAGCCGAAACCTACCGATACTTGTCGAACACTCTGTACCAGCGTTCAGGCCTTAAAACCAGTAGTGAAGAATTTGAACGGGGTAGTTCAAATTCTTCACAACAGGGTTCAAGCCTTAAAACCGGTTGTGAAAAATTTGAATTCCTGCTTGTATGCGGCTGCCATCGCGCACCCCACCGTTACTGACACACGCATATCACCGTGCTGATGATAGCAAAGAGAGTGGACAAAAGCCATTGAGAAAGCAGAAAGCCAACTCAGGGGAGTCAATCCTCCAGGTGAAGTCCCCATCAACGTACATTCATGAACTTCTTTTACCGCGTGGAAGCTAGCTGCTGCCACAGTCTATCCCAGCATAATCATGCGATAGCGTCGCTGACCAGTATGCCACGGCGGACCATGACCTCAGGTCCGTCCGCTACGCGACAGCACCTAAGGAGCGGTGTAGGGCAAAGGCCGCCAAAGGGACGGGCTCGTACTGGATGCCCCTATGACTGAGTCGCTGCGTAGGTATTAAATTTTCTGAGTTTCAAGTTTTTCACCACTGGCTTCAAAGTTTTAATGGCAGGTTTACACATTGCGAGTGGGACTAACTCTTACGAGAATGGATGCGCGTCACCCGGACTCGTTCGTCGAAACGTGAGATCTGACGAGACGTATCTACATCGACTGCCCGTCCAATACCTAAATTAAATAAGCAGCTTTAAAAGCACACGTGCATGTTGCGAGCAGACCCCTTCAGACTGGGTGATGCAGCACAGACCCCCCACCGATTTGATGCCTCAGGTATGATACAGTAAGTGGTTTAGTCGTCCGGCCGTATCGCCCAGGCGCTACAGTTCTCGACGGGAGTTTCTCACCTTTGTAAAGCTTTCTACAAATGTAGTCGTCGGTCAGGGTCTGATTGCTAGGTATAACTCCAATAATTAGGTGACGACGAAACCGGACTTATGTACCGTCATATTGAGTTGAAGCAACTACGTCAGGTTCGCCAGGGCCGTATGCTCGGACGGGATCGGAGATGACACAGAACTTGAATCCGGTTGTGAAGAATTTAAACCGCCCGCTTTTAGTCCCCGAGTCTGCCAGGACTCCGGCTAGACTATCCATCTAGCAGCCGCACTGGCCGATGCCTTGACGCTGCGGTCGATACTCATTGAGACATGGATTGAGAAGCTCACTAAGTCTATGGATTAGTGGTGCTTCTTCGAGCGCGGGAGAATTGTTGAGTGGGTATAGGGAGGCGATGGGACTTTAGCGCCTCGTAGACCTGAACACTTCGCGTAGCCACGGTACCGATTAAGGCCCAGAGTCATGCAAAGTTTGATTACTAGTCGCTCTCGGTACCTCCACCTTTATTTACCTAGTAGACGTACCCCACCGCCAGGCAACACCCTCGCGGAAATGCGGGAGGTTCGTTTCTTAGGAAGGAAAGTAATATTAGAATCTCGCGTTTGTAATGCAGAAAATGTTCCTAATTGCATCAGCGATCTGGAATTCATGTCGTTCTCTGCCTTCTATAATTCTCGTACCAGGTTACTAGATCTGAGGAACAAGAGGAGAGAGCTGTGACAATTGCCAGCACGCGCCACTTCCTCAGACGCGTACGTTGCCGGTTCGGGCGAGGCCGTACTTCGAGGGTACAATGCCATCGTTTTCATGTCGGCGCCGTATAAAACGGTACAGACCTGACAACGGACCTGCCTTCCTCCAGATTTCTTTTACACGTCTCTTGGGGCTTCTCAGCGATCTGTTAATGGACCTTGGAGGAACACCCTATTATGTTTTCATCGCTGAACCATTGAGAACGCTGGCCGGAAACGACTGCAACCGCTCGCCTGGTCTTATATACCGATCAGCGAAGGTAATATTCGGCAGACGTCTTTGGGGTTATGTAGACGTGCCGGTGGCATGCACTGTTTATGATCATTGCCAGCCCATCTCCCCCACAAAGCTGAATGTCCATGCTGCGCCCATCCATTACTTACAGACTCCGTGGTCCTTTTTTCGTTCCCATTCTCCAACTATAAGACATAATAGGCTTACAGATTGCGGCGGACCGCATGTCTTAACCCGATGGCGCCCCGATCTCTATAATTCCAGCTCATGAATATGGTTACTACTCGGCTTTACGCGTTAGGGCTATCGGCCGACTTCAAAAGCTTTAGAGTCAATAATCTTTTAAAGCCCGTTGTAAAGAATTTAAAACCGAATAGAAAGAGTCTCCAATGAATCGCGTTCTGGGCGTTCTCTGAGGAGAAGATTTTAATGGCCCACACCGTGGTGGTACAAACCACTCCAGTCTTCGCGCCTGTACAGCAAACCGAGGTACTTCATGGGCCGTTCCGCGCTTTTCTTGTAAAGATAATCAACCGGTTATTGCTAATTCTAGAGTAATTAATTTCAAATTCTTTACTACAGGTTTCAAGTATCGCACGGCGAACGCGAAAAACACGCGGGAGCCCTCCTCGAGGCGTTCTTCACTGGTCGATCTAAGGCCTAAGAGCCACGATCATTTGCACAATTCAAGTTCTTCACAACTGGATTCAAAAGGATGAAAATTTGTGATCGCGTACAACTTTGCCAATGCCCAAATAGGAAGTCGATTCATCTCCCCCCTCGGGCGATATGGACTCCATGGCACCGCCCCTGTGAGATCCAGGCCTCACGGACCGCGGAGTTGTGTGATCCAACGGGAAAGGTAGTAAGTGCCCATGTACCGGCCTCCTTCGCTCCTTAGCCCGAACGTGGCGATCATATGACGGCATGAAAGTCGGCATATTAACTCGCCACGTATCGGCGTGCGCCGCACCTCCCACTGATCACATCCGATCGTCAGCGATGCGGCGATGTGCTCACTATCGAGTAAGAACAGTTGGCTACACCACTACATCAGGAGTAGGGCCGTCAGCTGAGCGCACGACACGATGACAAACCTTGAATCCGGTTGTAAAAAATTTGAAATAGATCGGCTAGTTATCCTGGAGAAATGCATCGTGCTGATCTGGAACGAGGACGAGGGCGCATCCTTCACCGCGACGTTGAAATTACGGCAGCCACAGAGCTGACTAGACGTATAGTGGAGTGCGTGTAGCTCGTGGGTCGCTGGTGACGTTATTATGTTATTGAGCCGGGTAAGGCAGGACCCAACCCATTATGGCCGTCAGTGTGCATCAAGTACGAATGAATGACCCTACGCAGCCCCTCACACTCGTCCTGCATCGCTAAAAACCTCCACACACGATAAAGGTGACAAGCTACCCAGTGCATCTTAAATCCCGTGGTGAAGAATTTAAATCCATTCAGGGACGCTGGTAAGAATGTAAGCAGCTGAGGACGTACTCTTTAAATTCTTTACCACGGGGTTCAAGCGCGGAAGTTGTTTTGGTTAAATACCATACATATCTAAGCGCTCGCCGACGATCTCAATGACCGTGTTCCTTGCAATCTGGGTTATGTAATACCCGATCGGAGCCGCTGTTTACAGATCACGCGGATGACGTAAAGGTGTAATTCATGATCAGGGTTGTTTGGAACCTGCACGAGTGTCTAACCGGCGCACTGGCCAGCTACGCCAGCATTTGCTCCTGTATCCGTATAACTAGCACTATTTTGGGTGTCCCGGGCTCAGGGCGGGAACGTCGAGTCGCTATCTAAGTAAAGCCACGCGTGCCACTGCATATAGTGGGTTTTTTTATCCAGGCGGATTCTCTAGTGCGGGTAGACTTCGCCAAGATACATTGAAGAACCAAGATAGTTGTCGGAAGATTGGGTATGGCGGTAGAGCCACACACGAACCAAAGCGCCCTCCGGGAGCGGGGTAGAGGGATCATCAACAGCGGGAGGAAGTTTCAAGCCCTGGCAAGACGAGAGATCAGACGCAACACTACGGCATGGACGAACGCTATAAACATAACGTCATCACCTTTGTGAGTGCGCATAGTGATGAAGCTCCAGACCGCAAGCGCGGTATTCGTCATAAATCCCCTCACATGTTCATAGGCGAAGACGGTGCGCCCCGAAGGCACAGATGTCGAATGGTTGCTGGCCAGGCCGAGATTTAACCATATTCATATCCTCCCATAGAGAACTGAATTTAACAATACCAGTTTGCCTTAACCAATCGCACGGGCTCAGGGCTTCGTCATTCAACGCCGTGGGTGTGAGGGCTGTGTGTAACGGCCGTTTATAATCAAATTTTGCTATCCTACGGGTCGACGAGTCATCGGAACCTGTTATGTATCTAGATCGGTGCTATCTGATGCTTAGAGGATAGCGAAGGGACCATGAGACAAGTATGTCTAAATGCTTCTAACGACGTTCAACCTTTCAGGTAAGTAGTGGCCGATTACATCACACAGGTGCCACTGTATGAGATCTAGGCGTTGGTGACTGGTAGCAAGCTTGAGAAATGAATTGGTTCCGGAGACTGAGAACGTATACTGTATTCACGGTCCTGGACCAGTCTGTTCCCCTTGAGAGCCATTACTACTACCCAACGATAGACACATACAAGAGCTCTCTTTGCGTAAATAAGCCGCTAGGTCCAGTGTATGACTCAGAGATAGGACACCATCCTGTTGCTATACAGTGAGTCACGGTCCACGGAATAATGCGTAAGCTCGGGGGAGCCACGCTTCGGCGCCAGCTCGACGTAGTCCTAGTAGCCTCGGCTGTGACGGATTACCTCACATTTTTACGAAGGGTCGTAAATTTAACATCCTTCCGGCTCATATAGCTCTTGGGGCTGTTAATGGAGGGGTATACCGCCCAAAAGGCTTAATTGCTAGCCGTACGAAGAAAACCAACTGCTTTAAAGCCAGTTGTGAAGAACTTAAAGGGAACCCTTATGATGCATGGAATAGTAGCATCTTTAAACTAAGAGGTTCTCTTGCGCGTCGCTAGCACACTGCTGTAACTGAAAAGCCCCCCCCGTCTTATGCACGGGGTACAGGAATATCGAGTGTTATTGTCAAAATTCCAATTGATGCCCCTGCAGAGAAATCTTGCAGGTCGTCGTCCTACAAATTATGTCCAAGTGAATCATGCCACTTCCCGAGCATTTTCTAAAAACGACCTCTCCGTTTTTAAGGGCCGGCGAGTGCATTGTATTCATTACGGTTGACAGGACACGTACCGCGTTCTTGCATTTCATTGGGGCAATTGCATCTCACAAAATCAAGTTTGCCCGGTGCTTCTTCCAGTTCAAATTCTTCACAACCGGGTTCAAGCCTTGCTGGGACAGAGCCTATAAGTATAATACTGAGGCTTAATGGAGTGGGCCAGCCATTATACTTGGGACAGCGCATTCAACTTCAAATACACACTCCCAGTGCAGCAACAGTGGTAATACGAAGATTTCAGCTTGAAGAAGTCGCTAACGATCCTGACCACAGTAACTGGATCACACCATTCCGCGGAACGCCGAAGGATACAGGGTGGGGTTAGGAGGCTAAAATGGCCGAGAGCCAAGGACACAAAAGTAGCGTCACGCCGGCGGTGAGTTGGACTGGATCAGTGCGGCGGGGGTTCAATACTCACACCCGGCACCACACCTGAGTAGTCGATGCCTCACACATATCTTTACAGCAGGTTTTCAGTACGCCTAAATAGGATTTGCGGCTGCCAGGTGCATCCCTCAGAGACGAATCAGTGCTGTAACGTTCGCACAGTTACTCTATAGGGTCCGCGACGGCGGGCCCCGATTTACTTCCTTCAACATAGCGCACATCTGAAGCCGTTGGGTGATGTGATACGAGAGTACCACAGCCAAGTGGACAAATCCGCCGACAGGACCGGAAAACTCTAATGGTACAGTTTACTCTCCTCCGAATGTACTGGACGTGGGGGCTTTTATCACGGAGCCACCACAGGTTTTGTGACAATTATAGTTGGAAGTAAGTACACCATCGATGGATCATACTGACACTTAAACCAAGGGTTGATTAGGCGACTTATGGGGTGGTGAATACACGTTGAGTTAGATATTTGCTCGCACGGAGTGGCTGTAGCGATAAATGGAGAAGTCAAGCTCTATGAGTAACATTATAGCGTCCACTAGCCTGATACGTAGTTCATCATTTCCCCAAGACCTGGCACAAAGCAGCATACGAGAATGTAGTAGTGATACGGTTGGGCCCCTTGATTGACACGCCCTGCGTGCCAGGCTGCAGTTTCGCGAGTAGCTCAGTCATCATCGCAGATTCGCTATCCTTCTTGGCCAGAGCCCCCGTTAACCCGCATCCCAAGATGGTTATTTTCAACTGCGTTGGGACTTACCATTCCAAGCGCTGACGGCTAGAATTCGCGCGTTGCAATAGTATAGCTTAGCTCGGCAAATATAAACGAGGAAGTTGGCGTCCGGCACGAGGGGCCGAGGCCTTGCTGGGACCATGGTACTATTAGCTGATATGAACCAGCTTCCCCACCATACGGCACCAGGGCGCTTAAAACCAGTGGTGAAGAACTTGAAACAAAACACTGGCTTATCCTCCCTCTTGAATGCCATATCGCTAGTTTGTCATCTGCTTTCGTCAAAGCTCTTTGAATTTCAGGAAGGTTCGTATGTTGAATGATTTTGGAGGAGATTTCAAGTTCTTTACGACTGGGTTTAAAATGATTTGGGAAGCTTCCCAAACACTGACAGGGTCTATCGGATGTGGGCCTCGGTCTGCCTGTCCGAGGTGTGGCTTTACTGGATAGAAATAATGCTTACGAGGGGCACATTGTTACCTACATACCCCGATAGGACATGCGCTTGTAAGGCATCATTGCGCGTTATGTAACTCTTAACCTTTAAACCCGGTGGTGAAAAACTTGAAAATCTCAGAGAGAGCTTTATCCTCAATAAATTGGGCTCGGCCCTTTCCGGTATTAGAGAACTGTTCGAAAAATGACGCCATCTTTACGCAGTCTTCGCACCACTTCTATAGCGGCCTTGCGCCCTTAACCTTCGTAGTTTTGGCAAGGACGTATTTGTTCGGCTTATACAGGACCATTTAAATTCTATCTATGCGGATACTGTATAAACGAACAGGCTGACCCCGTTTGTTGCCGGCGGAGTTCATCATATTTGTGTGGAACTTTTCGGATCCCCGAGTATGCTTCGAAATTGACGCACGCGGGTAGCACCCTCCGGTTACGATCTATCAATTGTAGGGGTAACCAGTTGGCCTACCGGTCTAGTCTCAACTCATGACGATATTTTGAACCCCGTGGTAAAAAATTTAAAGGAAGCTGGGGGTTATCCAGTCCTAAATAGTTTCTCTTAATGCAAAGCGATGCCGTTTAGGGCGGCATTCAAATTTTTCACAACTGGGTTTAAATTTTCAATGTGAGACCGTATGGGTGAATCGGGATGGGACCGAGAGCCACGAGCTCGATCGCATTAGAGGGTACTCCAGACCCGATCGTGGTTGTGGTATACTTCTTCATAAGCAGCAAAATCATAGATGTCGTTCTCCTAGTGTGTCGAAACGCTGGCAATTAGGCTCTTGGTCTTCTAACAAATAAAGCACTTCCTCCCAGGCGGATATACCCCCGTAAACCGCATAGATTCTCG"
peptide = "FKFFTTGFK"



def get_pep(seq):
    res = ""
    for i in range(0, len(seq), 3):
#         print(seq[i: i + 3],"->",matcher[seq[i: i + 3]])
        res += matcher[seq[i: i + 3]]
    return res


final = []
def tranverse(dna, f):
    pepl = len(peptide) * 3
    for i in range(len(dna) - pepl):
        cand = dna[i:i + pepl]
        if get_pep(cand) == peptide:
            final.append(f(cand))
            
            
tranverse(dna, lambda x: x)
tranverse(rev_comp(dna), lambda x: rev_comp(x))

for i in final:
    print(i)